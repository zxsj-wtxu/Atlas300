// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: graph_config.proto

#ifndef PROTOBUF_graph_5fconfig_2eproto__INCLUDED
#define PROTOBUF_graph_5fconfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "ai_types.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_graph_5fconfig_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[8];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsDumpDefImpl();
void InitDefaultsDumpDef();
void InitDefaultsOAMConfigDefImpl();
void InitDefaultsOAMConfigDef();
void InitDefaultsEngineConfigImpl();
void InitDefaultsEngineConfig();
void InitDefaultsConnectConfigImpl();
void InitDefaultsConnectConfig();
void InitDefaultsGraphConfigImpl();
void InitDefaultsGraphConfig();
void InitDefaultsGraphConfigListImpl();
void InitDefaultsGraphConfigList();
void InitDefaultsProfileConfigImpl();
void InitDefaultsProfileConfig();
void InitDefaultsGraphUpdateConfigImpl();
void InitDefaultsGraphUpdateConfig();
inline void InitDefaults() {
  InitDefaultsDumpDef();
  InitDefaultsOAMConfigDef();
  InitDefaultsEngineConfig();
  InitDefaultsConnectConfig();
  InitDefaultsGraphConfig();
  InitDefaultsGraphConfigList();
  InitDefaultsProfileConfig();
  InitDefaultsGraphUpdateConfig();
}
}  // namespace protobuf_graph_5fconfig_2eproto
namespace hiai {
class ConnectConfig;
class ConnectConfigDefaultTypeInternal;
extern ConnectConfigDefaultTypeInternal _ConnectConfig_default_instance_;
class DumpDef;
class DumpDefDefaultTypeInternal;
extern DumpDefDefaultTypeInternal _DumpDef_default_instance_;
class EngineConfig;
class EngineConfigDefaultTypeInternal;
extern EngineConfigDefaultTypeInternal _EngineConfig_default_instance_;
class GraphConfig;
class GraphConfigDefaultTypeInternal;
extern GraphConfigDefaultTypeInternal _GraphConfig_default_instance_;
class GraphConfigList;
class GraphConfigListDefaultTypeInternal;
extern GraphConfigListDefaultTypeInternal _GraphConfigList_default_instance_;
class GraphUpdateConfig;
class GraphUpdateConfigDefaultTypeInternal;
extern GraphUpdateConfigDefaultTypeInternal _GraphUpdateConfig_default_instance_;
class OAMConfigDef;
class OAMConfigDefDefaultTypeInternal;
extern OAMConfigDefDefaultTypeInternal _OAMConfigDef_default_instance_;
class ProfileConfig;
class ProfileConfigDefaultTypeInternal;
extern ProfileConfigDefaultTypeInternal _ProfileConfig_default_instance_;
}  // namespace hiai
namespace hiai {

enum EngineConfig_RunSide {
  EngineConfig_RunSide_DEVICE = 0,
  EngineConfig_RunSide_HOST = 1,
  EngineConfig_RunSide_EngineConfig_RunSide_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EngineConfig_RunSide_EngineConfig_RunSide_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EngineConfig_RunSide_IsValid(int value);
const EngineConfig_RunSide EngineConfig_RunSide_RunSide_MIN = EngineConfig_RunSide_DEVICE;
const EngineConfig_RunSide EngineConfig_RunSide_RunSide_MAX = EngineConfig_RunSide_HOST;
const int EngineConfig_RunSide_RunSide_ARRAYSIZE = EngineConfig_RunSide_RunSide_MAX + 1;

const ::google::protobuf::EnumDescriptor* EngineConfig_RunSide_descriptor();
inline const ::std::string& EngineConfig_RunSide_Name(EngineConfig_RunSide value) {
  return ::google::protobuf::internal::NameOfEnum(
    EngineConfig_RunSide_descriptor(), value);
}
inline bool EngineConfig_RunSide_Parse(
    const ::std::string& name, EngineConfig_RunSide* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EngineConfig_RunSide>(
    EngineConfig_RunSide_descriptor(), name, value);
}
// ===================================================================

class DumpDef : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hiai.DumpDef) */ {
 public:
  DumpDef();
  virtual ~DumpDef();

  DumpDef(const DumpDef& from);

  inline DumpDef& operator=(const DumpDef& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DumpDef(DumpDef&& from) noexcept
    : DumpDef() {
    *this = ::std::move(from);
  }

  inline DumpDef& operator=(DumpDef&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DumpDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DumpDef* internal_default_instance() {
    return reinterpret_cast<const DumpDef*>(
               &_DumpDef_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(DumpDef* other);
  friend void swap(DumpDef& a, DumpDef& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DumpDef* New() const PROTOBUF_FINAL { return New(NULL); }

  DumpDef* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DumpDef& from);
  void MergeFrom(const DumpDef& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DumpDef* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes layer = 3;
  int layer_size() const;
  void clear_layer();
  static const int kLayerFieldNumber = 3;
  const ::std::string& layer(int index) const;
  ::std::string* mutable_layer(int index);
  void set_layer(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_layer(int index, ::std::string&& value);
  #endif
  void set_layer(int index, const char* value);
  void set_layer(int index, const void* value, size_t size);
  ::std::string* add_layer();
  void add_layer(const ::std::string& value);
  #if LANG_CXX11
  void add_layer(::std::string&& value);
  #endif
  void add_layer(const char* value);
  void add_layer(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& layer() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_layer();

  // bytes model_name = 1;
  void clear_model_name();
  static const int kModelNameFieldNumber = 1;
  const ::std::string& model_name() const;
  void set_model_name(const ::std::string& value);
  #if LANG_CXX11
  void set_model_name(::std::string&& value);
  #endif
  void set_model_name(const char* value);
  void set_model_name(const void* value, size_t size);
  ::std::string* mutable_model_name();
  ::std::string* release_model_name();
  void set_allocated_model_name(::std::string* model_name);

  // bytes is_dump_all = 2;
  void clear_is_dump_all();
  static const int kIsDumpAllFieldNumber = 2;
  const ::std::string& is_dump_all() const;
  void set_is_dump_all(const ::std::string& value);
  #if LANG_CXX11
  void set_is_dump_all(::std::string&& value);
  #endif
  void set_is_dump_all(const char* value);
  void set_is_dump_all(const void* value, size_t size);
  ::std::string* mutable_is_dump_all();
  ::std::string* release_is_dump_all();
  void set_allocated_is_dump_all(::std::string* is_dump_all);

  // @@protoc_insertion_point(class_scope:hiai.DumpDef)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> layer_;
  ::google::protobuf::internal::ArenaStringPtr model_name_;
  ::google::protobuf::internal::ArenaStringPtr is_dump_all_;
  mutable int _cached_size_;
  friend struct ::protobuf_graph_5fconfig_2eproto::TableStruct;
  friend void ::protobuf_graph_5fconfig_2eproto::InitDefaultsDumpDefImpl();
};
// -------------------------------------------------------------------

class OAMConfigDef : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hiai.OAMConfigDef) */ {
 public:
  OAMConfigDef();
  virtual ~OAMConfigDef();

  OAMConfigDef(const OAMConfigDef& from);

  inline OAMConfigDef& operator=(const OAMConfigDef& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OAMConfigDef(OAMConfigDef&& from) noexcept
    : OAMConfigDef() {
    *this = ::std::move(from);
  }

  inline OAMConfigDef& operator=(OAMConfigDef&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OAMConfigDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OAMConfigDef* internal_default_instance() {
    return reinterpret_cast<const OAMConfigDef*>(
               &_OAMConfigDef_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(OAMConfigDef* other);
  friend void swap(OAMConfigDef& a, OAMConfigDef& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OAMConfigDef* New() const PROTOBUF_FINAL { return New(NULL); }

  OAMConfigDef* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OAMConfigDef& from);
  void MergeFrom(const OAMConfigDef& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OAMConfigDef* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .hiai.DumpDef dump_list = 1;
  int dump_list_size() const;
  void clear_dump_list();
  static const int kDumpListFieldNumber = 1;
  const ::hiai::DumpDef& dump_list(int index) const;
  ::hiai::DumpDef* mutable_dump_list(int index);
  ::hiai::DumpDef* add_dump_list();
  ::google::protobuf::RepeatedPtrField< ::hiai::DumpDef >*
      mutable_dump_list();
  const ::google::protobuf::RepeatedPtrField< ::hiai::DumpDef >&
      dump_list() const;

  // bytes dump_path = 2;
  void clear_dump_path();
  static const int kDumpPathFieldNumber = 2;
  const ::std::string& dump_path() const;
  void set_dump_path(const ::std::string& value);
  #if LANG_CXX11
  void set_dump_path(::std::string&& value);
  #endif
  void set_dump_path(const char* value);
  void set_dump_path(const void* value, size_t size);
  ::std::string* mutable_dump_path();
  ::std::string* release_dump_path();
  void set_allocated_dump_path(::std::string* dump_path);

  // @@protoc_insertion_point(class_scope:hiai.OAMConfigDef)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::hiai::DumpDef > dump_list_;
  ::google::protobuf::internal::ArenaStringPtr dump_path_;
  mutable int _cached_size_;
  friend struct ::protobuf_graph_5fconfig_2eproto::TableStruct;
  friend void ::protobuf_graph_5fconfig_2eproto::InitDefaultsOAMConfigDefImpl();
};
// -------------------------------------------------------------------

class EngineConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hiai.EngineConfig) */ {
 public:
  EngineConfig();
  virtual ~EngineConfig();

  EngineConfig(const EngineConfig& from);

  inline EngineConfig& operator=(const EngineConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EngineConfig(EngineConfig&& from) noexcept
    : EngineConfig() {
    *this = ::std::move(from);
  }

  inline EngineConfig& operator=(EngineConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EngineConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EngineConfig* internal_default_instance() {
    return reinterpret_cast<const EngineConfig*>(
               &_EngineConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(EngineConfig* other);
  friend void swap(EngineConfig& a, EngineConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EngineConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  EngineConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EngineConfig& from);
  void MergeFrom(const EngineConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EngineConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EngineConfig_RunSide RunSide;
  static const RunSide DEVICE =
    EngineConfig_RunSide_DEVICE;
  static const RunSide HOST =
    EngineConfig_RunSide_HOST;
  static inline bool RunSide_IsValid(int value) {
    return EngineConfig_RunSide_IsValid(value);
  }
  static const RunSide RunSide_MIN =
    EngineConfig_RunSide_RunSide_MIN;
  static const RunSide RunSide_MAX =
    EngineConfig_RunSide_RunSide_MAX;
  static const int RunSide_ARRAYSIZE =
    EngineConfig_RunSide_RunSide_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RunSide_descriptor() {
    return EngineConfig_RunSide_descriptor();
  }
  static inline const ::std::string& RunSide_Name(RunSide value) {
    return EngineConfig_RunSide_Name(value);
  }
  static inline bool RunSide_Parse(const ::std::string& name,
      RunSide* value) {
    return EngineConfig_RunSide_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated bytes so_name = 3;
  int so_name_size() const;
  void clear_so_name();
  static const int kSoNameFieldNumber = 3;
  const ::std::string& so_name(int index) const;
  ::std::string* mutable_so_name(int index);
  void set_so_name(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_so_name(int index, ::std::string&& value);
  #endif
  void set_so_name(int index, const char* value);
  void set_so_name(int index, const void* value, size_t size);
  ::std::string* add_so_name();
  void add_so_name(const ::std::string& value);
  #if LANG_CXX11
  void add_so_name(::std::string&& value);
  #endif
  void add_so_name(const char* value);
  void add_so_name(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& so_name() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_so_name();

  // repeated .hiai.AIModelDescription ai_model = 9;
  int ai_model_size() const;
  void clear_ai_model();
  static const int kAiModelFieldNumber = 9;
  const ::hiai::AIModelDescription& ai_model(int index) const;
  ::hiai::AIModelDescription* mutable_ai_model(int index);
  ::hiai::AIModelDescription* add_ai_model();
  ::google::protobuf::RepeatedPtrField< ::hiai::AIModelDescription >*
      mutable_ai_model();
  const ::google::protobuf::RepeatedPtrField< ::hiai::AIModelDescription >&
      ai_model() const;

  // repeated bytes internal_so_name = 10;
  int internal_so_name_size() const;
  void clear_internal_so_name();
  static const int kInternalSoNameFieldNumber = 10;
  const ::std::string& internal_so_name(int index) const;
  ::std::string* mutable_internal_so_name(int index);
  void set_internal_so_name(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_internal_so_name(int index, ::std::string&& value);
  #endif
  void set_internal_so_name(int index, const char* value);
  void set_internal_so_name(int index, const void* value, size_t size);
  ::std::string* add_internal_so_name();
  void add_internal_so_name(const ::std::string& value);
  #if LANG_CXX11
  void add_internal_so_name(::std::string&& value);
  #endif
  void add_internal_so_name(const char* value);
  void add_internal_so_name(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& internal_so_name() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_internal_so_name();

  // bytes engine_name = 2;
  void clear_engine_name();
  static const int kEngineNameFieldNumber = 2;
  const ::std::string& engine_name() const;
  void set_engine_name(const ::std::string& value);
  #if LANG_CXX11
  void set_engine_name(::std::string&& value);
  #endif
  void set_engine_name(const char* value);
  void set_engine_name(const void* value, size_t size);
  ::std::string* mutable_engine_name();
  ::std::string* release_engine_name();
  void set_allocated_engine_name(::std::string* engine_name);

  // .hiai.AIConfig ai_config = 8;
  bool has_ai_config() const;
  void clear_ai_config();
  static const int kAiConfigFieldNumber = 8;
  const ::hiai::AIConfig& ai_config() const;
  ::hiai::AIConfig* release_ai_config();
  ::hiai::AIConfig* mutable_ai_config();
  void set_allocated_ai_config(::hiai::AIConfig* ai_config);

  // .hiai.OAMConfigDef oam_config = 14;
  bool has_oam_config() const;
  void clear_oam_config();
  static const int kOamConfigFieldNumber = 14;
  const ::hiai::OAMConfigDef& oam_config() const;
  ::hiai::OAMConfigDef* release_oam_config();
  ::hiai::OAMConfigDef* mutable_oam_config();
  void set_allocated_oam_config(::hiai::OAMConfigDef* oam_config);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // .hiai.EngineConfig.RunSide side = 4;
  void clear_side();
  static const int kSideFieldNumber = 4;
  ::hiai::EngineConfig_RunSide side() const;
  void set_side(::hiai::EngineConfig_RunSide value);

  // uint32 thread_num = 5;
  void clear_thread_num();
  static const int kThreadNumFieldNumber = 5;
  ::google::protobuf::uint32 thread_num() const;
  void set_thread_num(::google::protobuf::uint32 value);

  // uint32 thread_priority = 6;
  void clear_thread_priority();
  static const int kThreadPriorityFieldNumber = 6;
  ::google::protobuf::uint32 thread_priority() const;
  void set_thread_priority(::google::protobuf::uint32 value);

  // uint32 queue_size = 7;
  void clear_queue_size();
  static const int kQueueSizeFieldNumber = 7;
  ::google::protobuf::uint32 queue_size() const;
  void set_queue_size(::google::protobuf::uint32 value);

  // uint32 wait_inputdata_max_time = 12;
  void clear_wait_inputdata_max_time();
  static const int kWaitInputdataMaxTimeFieldNumber = 12;
  ::google::protobuf::uint32 wait_inputdata_max_time() const;
  void set_wait_inputdata_max_time(::google::protobuf::uint32 value);

  // uint32 holdModelFileFlag = 13;
  void clear_holdmodelfileflag();
  static const int kHoldModelFileFlagFieldNumber = 13;
  ::google::protobuf::uint32 holdmodelfileflag() const;
  void set_holdmodelfileflag(::google::protobuf::uint32 value);

  // bool is_repeat_timeout_flag = 15;
  void clear_is_repeat_timeout_flag();
  static const int kIsRepeatTimeoutFlagFieldNumber = 15;
  bool is_repeat_timeout_flag() const;
  void set_is_repeat_timeout_flag(bool value);

  // @@protoc_insertion_point(class_scope:hiai.EngineConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> so_name_;
  ::google::protobuf::RepeatedPtrField< ::hiai::AIModelDescription > ai_model_;
  ::google::protobuf::RepeatedPtrField< ::std::string> internal_so_name_;
  ::google::protobuf::internal::ArenaStringPtr engine_name_;
  ::hiai::AIConfig* ai_config_;
  ::hiai::OAMConfigDef* oam_config_;
  ::google::protobuf::uint32 id_;
  int side_;
  ::google::protobuf::uint32 thread_num_;
  ::google::protobuf::uint32 thread_priority_;
  ::google::protobuf::uint32 queue_size_;
  ::google::protobuf::uint32 wait_inputdata_max_time_;
  ::google::protobuf::uint32 holdmodelfileflag_;
  bool is_repeat_timeout_flag_;
  mutable int _cached_size_;
  friend struct ::protobuf_graph_5fconfig_2eproto::TableStruct;
  friend void ::protobuf_graph_5fconfig_2eproto::InitDefaultsEngineConfigImpl();
};
// -------------------------------------------------------------------

class ConnectConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hiai.ConnectConfig) */ {
 public:
  ConnectConfig();
  virtual ~ConnectConfig();

  ConnectConfig(const ConnectConfig& from);

  inline ConnectConfig& operator=(const ConnectConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConnectConfig(ConnectConfig&& from) noexcept
    : ConnectConfig() {
    *this = ::std::move(from);
  }

  inline ConnectConfig& operator=(ConnectConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnectConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConnectConfig* internal_default_instance() {
    return reinterpret_cast<const ConnectConfig*>(
               &_ConnectConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ConnectConfig* other);
  friend void swap(ConnectConfig& a, ConnectConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConnectConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  ConnectConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConnectConfig& from);
  void MergeFrom(const ConnectConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConnectConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 src_engine_id = 1;
  void clear_src_engine_id();
  static const int kSrcEngineIdFieldNumber = 1;
  ::google::protobuf::uint32 src_engine_id() const;
  void set_src_engine_id(::google::protobuf::uint32 value);

  // uint32 src_port_id = 2;
  void clear_src_port_id();
  static const int kSrcPortIdFieldNumber = 2;
  ::google::protobuf::uint32 src_port_id() const;
  void set_src_port_id(::google::protobuf::uint32 value);

  // uint32 target_graph_id = 3;
  void clear_target_graph_id();
  static const int kTargetGraphIdFieldNumber = 3;
  ::google::protobuf::uint32 target_graph_id() const;
  void set_target_graph_id(::google::protobuf::uint32 value);

  // uint32 target_engine_id = 4;
  void clear_target_engine_id();
  static const int kTargetEngineIdFieldNumber = 4;
  ::google::protobuf::uint32 target_engine_id() const;
  void set_target_engine_id(::google::protobuf::uint32 value);

  // uint32 target_port_id = 5;
  void clear_target_port_id();
  static const int kTargetPortIdFieldNumber = 5;
  ::google::protobuf::uint32 target_port_id() const;
  void set_target_port_id(::google::protobuf::uint32 value);

  // bool receive_memory_without_dvpp = 6;
  void clear_receive_memory_without_dvpp();
  static const int kReceiveMemoryWithoutDvppFieldNumber = 6;
  bool receive_memory_without_dvpp() const;
  void set_receive_memory_without_dvpp(bool value);

  // @@protoc_insertion_point(class_scope:hiai.ConnectConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 src_engine_id_;
  ::google::protobuf::uint32 src_port_id_;
  ::google::protobuf::uint32 target_graph_id_;
  ::google::protobuf::uint32 target_engine_id_;
  ::google::protobuf::uint32 target_port_id_;
  bool receive_memory_without_dvpp_;
  mutable int _cached_size_;
  friend struct ::protobuf_graph_5fconfig_2eproto::TableStruct;
  friend void ::protobuf_graph_5fconfig_2eproto::InitDefaultsConnectConfigImpl();
};
// -------------------------------------------------------------------

class GraphConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hiai.GraphConfig) */ {
 public:
  GraphConfig();
  virtual ~GraphConfig();

  GraphConfig(const GraphConfig& from);

  inline GraphConfig& operator=(const GraphConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GraphConfig(GraphConfig&& from) noexcept
    : GraphConfig() {
    *this = ::std::move(from);
  }

  inline GraphConfig& operator=(GraphConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GraphConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GraphConfig* internal_default_instance() {
    return reinterpret_cast<const GraphConfig*>(
               &_GraphConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(GraphConfig* other);
  friend void swap(GraphConfig& a, GraphConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GraphConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  GraphConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GraphConfig& from);
  void MergeFrom(const GraphConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GraphConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .hiai.EngineConfig engines = 4;
  int engines_size() const;
  void clear_engines();
  static const int kEnginesFieldNumber = 4;
  const ::hiai::EngineConfig& engines(int index) const;
  ::hiai::EngineConfig* mutable_engines(int index);
  ::hiai::EngineConfig* add_engines();
  ::google::protobuf::RepeatedPtrField< ::hiai::EngineConfig >*
      mutable_engines();
  const ::google::protobuf::RepeatedPtrField< ::hiai::EngineConfig >&
      engines() const;

  // repeated .hiai.ConnectConfig connects = 5;
  int connects_size() const;
  void clear_connects();
  static const int kConnectsFieldNumber = 5;
  const ::hiai::ConnectConfig& connects(int index) const;
  ::hiai::ConnectConfig* mutable_connects(int index);
  ::hiai::ConnectConfig* add_connects();
  ::google::protobuf::RepeatedPtrField< ::hiai::ConnectConfig >*
      mutable_connects();
  const ::google::protobuf::RepeatedPtrField< ::hiai::ConnectConfig >&
      connects() const;

  // bytes device_id = 3;
  void clear_device_id();
  static const int kDeviceIdFieldNumber = 3;
  const ::std::string& device_id() const;
  void set_device_id(const ::std::string& value);
  #if LANG_CXX11
  void set_device_id(::std::string&& value);
  #endif
  void set_device_id(const char* value);
  void set_device_id(const void* value, size_t size);
  ::std::string* mutable_device_id();
  ::std::string* release_device_id();
  void set_allocated_device_id(::std::string* device_id);

  // uint32 graph_id = 1;
  void clear_graph_id();
  static const int kGraphIdFieldNumber = 1;
  ::google::protobuf::uint32 graph_id() const;
  void set_graph_id(::google::protobuf::uint32 value);

  // int32 priority = 2;
  void clear_priority();
  static const int kPriorityFieldNumber = 2;
  ::google::protobuf::int32 priority() const;
  void set_priority(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:hiai.GraphConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::hiai::EngineConfig > engines_;
  ::google::protobuf::RepeatedPtrField< ::hiai::ConnectConfig > connects_;
  ::google::protobuf::internal::ArenaStringPtr device_id_;
  ::google::protobuf::uint32 graph_id_;
  ::google::protobuf::int32 priority_;
  mutable int _cached_size_;
  friend struct ::protobuf_graph_5fconfig_2eproto::TableStruct;
  friend void ::protobuf_graph_5fconfig_2eproto::InitDefaultsGraphConfigImpl();
};
// -------------------------------------------------------------------

class GraphConfigList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hiai.GraphConfigList) */ {
 public:
  GraphConfigList();
  virtual ~GraphConfigList();

  GraphConfigList(const GraphConfigList& from);

  inline GraphConfigList& operator=(const GraphConfigList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GraphConfigList(GraphConfigList&& from) noexcept
    : GraphConfigList() {
    *this = ::std::move(from);
  }

  inline GraphConfigList& operator=(GraphConfigList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GraphConfigList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GraphConfigList* internal_default_instance() {
    return reinterpret_cast<const GraphConfigList*>(
               &_GraphConfigList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(GraphConfigList* other);
  friend void swap(GraphConfigList& a, GraphConfigList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GraphConfigList* New() const PROTOBUF_FINAL { return New(NULL); }

  GraphConfigList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GraphConfigList& from);
  void MergeFrom(const GraphConfigList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GraphConfigList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .hiai.GraphConfig graphs = 1;
  int graphs_size() const;
  void clear_graphs();
  static const int kGraphsFieldNumber = 1;
  const ::hiai::GraphConfig& graphs(int index) const;
  ::hiai::GraphConfig* mutable_graphs(int index);
  ::hiai::GraphConfig* add_graphs();
  ::google::protobuf::RepeatedPtrField< ::hiai::GraphConfig >*
      mutable_graphs();
  const ::google::protobuf::RepeatedPtrField< ::hiai::GraphConfig >&
      graphs() const;

  // @@protoc_insertion_point(class_scope:hiai.GraphConfigList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::hiai::GraphConfig > graphs_;
  mutable int _cached_size_;
  friend struct ::protobuf_graph_5fconfig_2eproto::TableStruct;
  friend void ::protobuf_graph_5fconfig_2eproto::InitDefaultsGraphConfigListImpl();
};
// -------------------------------------------------------------------

class ProfileConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hiai.ProfileConfig) */ {
 public:
  ProfileConfig();
  virtual ~ProfileConfig();

  ProfileConfig(const ProfileConfig& from);

  inline ProfileConfig& operator=(const ProfileConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProfileConfig(ProfileConfig&& from) noexcept
    : ProfileConfig() {
    *this = ::std::move(from);
  }

  inline ProfileConfig& operator=(ProfileConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProfileConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProfileConfig* internal_default_instance() {
    return reinterpret_cast<const ProfileConfig*>(
               &_ProfileConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ProfileConfig* other);
  friend void swap(ProfileConfig& a, ProfileConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProfileConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  ProfileConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProfileConfig& from);
  void MergeFrom(const ProfileConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProfileConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes matrix_profiling = 1;
  void clear_matrix_profiling();
  static const int kMatrixProfilingFieldNumber = 1;
  const ::std::string& matrix_profiling() const;
  void set_matrix_profiling(const ::std::string& value);
  #if LANG_CXX11
  void set_matrix_profiling(::std::string&& value);
  #endif
  void set_matrix_profiling(const char* value);
  void set_matrix_profiling(const void* value, size_t size);
  ::std::string* mutable_matrix_profiling();
  ::std::string* release_matrix_profiling();
  void set_allocated_matrix_profiling(::std::string* matrix_profiling);

  // bytes ome_profiling = 2;
  void clear_ome_profiling();
  static const int kOmeProfilingFieldNumber = 2;
  const ::std::string& ome_profiling() const;
  void set_ome_profiling(const ::std::string& value);
  #if LANG_CXX11
  void set_ome_profiling(::std::string&& value);
  #endif
  void set_ome_profiling(const char* value);
  void set_ome_profiling(const void* value, size_t size);
  ::std::string* mutable_ome_profiling();
  ::std::string* release_ome_profiling();
  void set_allocated_ome_profiling(::std::string* ome_profiling);

  // bytes cce_profiling = 3;
  void clear_cce_profiling();
  static const int kCceProfilingFieldNumber = 3;
  const ::std::string& cce_profiling() const;
  void set_cce_profiling(const ::std::string& value);
  #if LANG_CXX11
  void set_cce_profiling(::std::string&& value);
  #endif
  void set_cce_profiling(const char* value);
  void set_cce_profiling(const void* value, size_t size);
  ::std::string* mutable_cce_profiling();
  ::std::string* release_cce_profiling();
  void set_allocated_cce_profiling(::std::string* cce_profiling);

  // bytes runtime_profiling = 4;
  void clear_runtime_profiling();
  static const int kRuntimeProfilingFieldNumber = 4;
  const ::std::string& runtime_profiling() const;
  void set_runtime_profiling(const ::std::string& value);
  #if LANG_CXX11
  void set_runtime_profiling(::std::string&& value);
  #endif
  void set_runtime_profiling(const char* value);
  void set_runtime_profiling(const void* value, size_t size);
  ::std::string* mutable_runtime_profiling();
  ::std::string* release_runtime_profiling();
  void set_allocated_runtime_profiling(::std::string* runtime_profiling);

  // bytes PROFILER_TARGET = 5;
  void clear_profiler_target();
  static const int kPROFILERTARGETFieldNumber = 5;
  const ::std::string& profiler_target() const;
  void set_profiler_target(const ::std::string& value);
  #if LANG_CXX11
  void set_profiler_target(::std::string&& value);
  #endif
  void set_profiler_target(const char* value);
  void set_profiler_target(const void* value, size_t size);
  ::std::string* mutable_profiler_target();
  ::std::string* release_profiler_target();
  void set_allocated_profiler_target(::std::string* profiler_target);

  // bytes PROFILER_JOBCTX = 6;
  void clear_profiler_jobctx();
  static const int kPROFILERJOBCTXFieldNumber = 6;
  const ::std::string& profiler_jobctx() const;
  void set_profiler_jobctx(const ::std::string& value);
  #if LANG_CXX11
  void set_profiler_jobctx(::std::string&& value);
  #endif
  void set_profiler_jobctx(const char* value);
  void set_profiler_jobctx(const void* value, size_t size);
  ::std::string* mutable_profiler_jobctx();
  ::std::string* release_profiler_jobctx();
  void set_allocated_profiler_jobctx(::std::string* profiler_jobctx);

  // bytes src_path = 7;
  void clear_src_path();
  static const int kSrcPathFieldNumber = 7;
  const ::std::string& src_path() const;
  void set_src_path(const ::std::string& value);
  #if LANG_CXX11
  void set_src_path(::std::string&& value);
  #endif
  void set_src_path(const char* value);
  void set_src_path(const void* value, size_t size);
  ::std::string* mutable_src_path();
  ::std::string* release_src_path();
  void set_allocated_src_path(::std::string* src_path);

  // bytes dest_path = 8;
  void clear_dest_path();
  static const int kDestPathFieldNumber = 8;
  const ::std::string& dest_path() const;
  void set_dest_path(const ::std::string& value);
  #if LANG_CXX11
  void set_dest_path(::std::string&& value);
  #endif
  void set_dest_path(const char* value);
  void set_dest_path(const void* value, size_t size);
  ::std::string* mutable_dest_path();
  ::std::string* release_dest_path();
  void set_allocated_dest_path(::std::string* dest_path);

  // bytes runtime_config = 9;
  void clear_runtime_config();
  static const int kRuntimeConfigFieldNumber = 9;
  const ::std::string& runtime_config() const;
  void set_runtime_config(const ::std::string& value);
  #if LANG_CXX11
  void set_runtime_config(::std::string&& value);
  #endif
  void set_runtime_config(const char* value);
  void set_runtime_config(const void* value, size_t size);
  ::std::string* mutable_runtime_config();
  ::std::string* release_runtime_config();
  void set_allocated_runtime_config(::std::string* runtime_config);

  // bytes RTS_PATH = 10;
  void clear_rts_path();
  static const int kRTSPATHFieldNumber = 10;
  const ::std::string& rts_path() const;
  void set_rts_path(const ::std::string& value);
  #if LANG_CXX11
  void set_rts_path(::std::string&& value);
  #endif
  void set_rts_path(const char* value);
  void set_rts_path(const void* value, size_t size);
  ::std::string* mutable_rts_path();
  ::std::string* release_rts_path();
  void set_allocated_rts_path(::std::string* rts_path);

  // bytes profiler_jobctx_path = 11;
  void clear_profiler_jobctx_path();
  static const int kProfilerJobctxPathFieldNumber = 11;
  const ::std::string& profiler_jobctx_path() const;
  void set_profiler_jobctx_path(const ::std::string& value);
  #if LANG_CXX11
  void set_profiler_jobctx_path(::std::string&& value);
  #endif
  void set_profiler_jobctx_path(const char* value);
  void set_profiler_jobctx_path(const void* value, size_t size);
  ::std::string* mutable_profiler_jobctx_path();
  ::std::string* release_profiler_jobctx_path();
  void set_allocated_profiler_jobctx_path(::std::string* profiler_jobctx_path);

  // bytes profiler_target_path = 12;
  void clear_profiler_target_path();
  static const int kProfilerTargetPathFieldNumber = 12;
  const ::std::string& profiler_target_path() const;
  void set_profiler_target_path(const ::std::string& value);
  #if LANG_CXX11
  void set_profiler_target_path(::std::string&& value);
  #endif
  void set_profiler_target_path(const char* value);
  void set_profiler_target_path(const void* value, size_t size);
  ::std::string* mutable_profiler_target_path();
  ::std::string* release_profiler_target_path();
  void set_allocated_profiler_target_path(::std::string* profiler_target_path);

  // @@protoc_insertion_point(class_scope:hiai.ProfileConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr matrix_profiling_;
  ::google::protobuf::internal::ArenaStringPtr ome_profiling_;
  ::google::protobuf::internal::ArenaStringPtr cce_profiling_;
  ::google::protobuf::internal::ArenaStringPtr runtime_profiling_;
  ::google::protobuf::internal::ArenaStringPtr profiler_target_;
  ::google::protobuf::internal::ArenaStringPtr profiler_jobctx_;
  ::google::protobuf::internal::ArenaStringPtr src_path_;
  ::google::protobuf::internal::ArenaStringPtr dest_path_;
  ::google::protobuf::internal::ArenaStringPtr runtime_config_;
  ::google::protobuf::internal::ArenaStringPtr rts_path_;
  ::google::protobuf::internal::ArenaStringPtr profiler_jobctx_path_;
  ::google::protobuf::internal::ArenaStringPtr profiler_target_path_;
  mutable int _cached_size_;
  friend struct ::protobuf_graph_5fconfig_2eproto::TableStruct;
  friend void ::protobuf_graph_5fconfig_2eproto::InitDefaultsProfileConfigImpl();
};
// -------------------------------------------------------------------

class GraphUpdateConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hiai.GraphUpdateConfig) */ {
 public:
  GraphUpdateConfig();
  virtual ~GraphUpdateConfig();

  GraphUpdateConfig(const GraphUpdateConfig& from);

  inline GraphUpdateConfig& operator=(const GraphUpdateConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GraphUpdateConfig(GraphUpdateConfig&& from) noexcept
    : GraphUpdateConfig() {
    *this = ::std::move(from);
  }

  inline GraphUpdateConfig& operator=(GraphUpdateConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GraphUpdateConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GraphUpdateConfig* internal_default_instance() {
    return reinterpret_cast<const GraphUpdateConfig*>(
               &_GraphUpdateConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(GraphUpdateConfig* other);
  friend void swap(GraphUpdateConfig& a, GraphUpdateConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GraphUpdateConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  GraphUpdateConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GraphUpdateConfig& from);
  void MergeFrom(const GraphUpdateConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GraphUpdateConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 del_engine_ids = 2;
  int del_engine_ids_size() const;
  void clear_del_engine_ids();
  static const int kDelEngineIdsFieldNumber = 2;
  ::google::protobuf::uint32 del_engine_ids(int index) const;
  void set_del_engine_ids(int index, ::google::protobuf::uint32 value);
  void add_del_engine_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      del_engine_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_del_engine_ids();

  // repeated .hiai.ConnectConfig del_connects = 3;
  int del_connects_size() const;
  void clear_del_connects();
  static const int kDelConnectsFieldNumber = 3;
  const ::hiai::ConnectConfig& del_connects(int index) const;
  ::hiai::ConnectConfig* mutable_del_connects(int index);
  ::hiai::ConnectConfig* add_del_connects();
  ::google::protobuf::RepeatedPtrField< ::hiai::ConnectConfig >*
      mutable_del_connects();
  const ::google::protobuf::RepeatedPtrField< ::hiai::ConnectConfig >&
      del_connects() const;

  // .hiai.GraphConfig updataGraphConfig = 1;
  bool has_updatagraphconfig() const;
  void clear_updatagraphconfig();
  static const int kUpdataGraphConfigFieldNumber = 1;
  const ::hiai::GraphConfig& updatagraphconfig() const;
  ::hiai::GraphConfig* release_updatagraphconfig();
  ::hiai::GraphConfig* mutable_updatagraphconfig();
  void set_allocated_updatagraphconfig(::hiai::GraphConfig* updatagraphconfig);

  // @@protoc_insertion_point(class_scope:hiai.GraphUpdateConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > del_engine_ids_;
  mutable int _del_engine_ids_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::hiai::ConnectConfig > del_connects_;
  ::hiai::GraphConfig* updatagraphconfig_;
  mutable int _cached_size_;
  friend struct ::protobuf_graph_5fconfig_2eproto::TableStruct;
  friend void ::protobuf_graph_5fconfig_2eproto::InitDefaultsGraphUpdateConfigImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DumpDef

// bytes model_name = 1;
inline void DumpDef::clear_model_name() {
  model_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DumpDef::model_name() const {
  // @@protoc_insertion_point(field_get:hiai.DumpDef.model_name)
  return model_name_.GetNoArena();
}
inline void DumpDef::set_model_name(const ::std::string& value) {
  
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hiai.DumpDef.model_name)
}
#if LANG_CXX11
inline void DumpDef::set_model_name(::std::string&& value) {
  
  model_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hiai.DumpDef.model_name)
}
#endif
inline void DumpDef::set_model_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hiai.DumpDef.model_name)
}
inline void DumpDef::set_model_name(const void* value, size_t size) {
  
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hiai.DumpDef.model_name)
}
inline ::std::string* DumpDef::mutable_model_name() {
  
  // @@protoc_insertion_point(field_mutable:hiai.DumpDef.model_name)
  return model_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DumpDef::release_model_name() {
  // @@protoc_insertion_point(field_release:hiai.DumpDef.model_name)
  
  return model_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DumpDef::set_allocated_model_name(::std::string* model_name) {
  if (model_name != NULL) {
    
  } else {
    
  }
  model_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model_name);
  // @@protoc_insertion_point(field_set_allocated:hiai.DumpDef.model_name)
}

// bytes is_dump_all = 2;
inline void DumpDef::clear_is_dump_all() {
  is_dump_all_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DumpDef::is_dump_all() const {
  // @@protoc_insertion_point(field_get:hiai.DumpDef.is_dump_all)
  return is_dump_all_.GetNoArena();
}
inline void DumpDef::set_is_dump_all(const ::std::string& value) {
  
  is_dump_all_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hiai.DumpDef.is_dump_all)
}
#if LANG_CXX11
inline void DumpDef::set_is_dump_all(::std::string&& value) {
  
  is_dump_all_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hiai.DumpDef.is_dump_all)
}
#endif
inline void DumpDef::set_is_dump_all(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  is_dump_all_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hiai.DumpDef.is_dump_all)
}
inline void DumpDef::set_is_dump_all(const void* value, size_t size) {
  
  is_dump_all_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hiai.DumpDef.is_dump_all)
}
inline ::std::string* DumpDef::mutable_is_dump_all() {
  
  // @@protoc_insertion_point(field_mutable:hiai.DumpDef.is_dump_all)
  return is_dump_all_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DumpDef::release_is_dump_all() {
  // @@protoc_insertion_point(field_release:hiai.DumpDef.is_dump_all)
  
  return is_dump_all_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DumpDef::set_allocated_is_dump_all(::std::string* is_dump_all) {
  if (is_dump_all != NULL) {
    
  } else {
    
  }
  is_dump_all_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), is_dump_all);
  // @@protoc_insertion_point(field_set_allocated:hiai.DumpDef.is_dump_all)
}

// repeated bytes layer = 3;
inline int DumpDef::layer_size() const {
  return layer_.size();
}
inline void DumpDef::clear_layer() {
  layer_.Clear();
}
inline const ::std::string& DumpDef::layer(int index) const {
  // @@protoc_insertion_point(field_get:hiai.DumpDef.layer)
  return layer_.Get(index);
}
inline ::std::string* DumpDef::mutable_layer(int index) {
  // @@protoc_insertion_point(field_mutable:hiai.DumpDef.layer)
  return layer_.Mutable(index);
}
inline void DumpDef::set_layer(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:hiai.DumpDef.layer)
  layer_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void DumpDef::set_layer(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:hiai.DumpDef.layer)
  layer_.Mutable(index)->assign(std::move(value));
}
#endif
inline void DumpDef::set_layer(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  layer_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:hiai.DumpDef.layer)
}
inline void DumpDef::set_layer(int index, const void* value, size_t size) {
  layer_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:hiai.DumpDef.layer)
}
inline ::std::string* DumpDef::add_layer() {
  // @@protoc_insertion_point(field_add_mutable:hiai.DumpDef.layer)
  return layer_.Add();
}
inline void DumpDef::add_layer(const ::std::string& value) {
  layer_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:hiai.DumpDef.layer)
}
#if LANG_CXX11
inline void DumpDef::add_layer(::std::string&& value) {
  layer_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:hiai.DumpDef.layer)
}
#endif
inline void DumpDef::add_layer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  layer_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:hiai.DumpDef.layer)
}
inline void DumpDef::add_layer(const void* value, size_t size) {
  layer_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:hiai.DumpDef.layer)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DumpDef::layer() const {
  // @@protoc_insertion_point(field_list:hiai.DumpDef.layer)
  return layer_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DumpDef::mutable_layer() {
  // @@protoc_insertion_point(field_mutable_list:hiai.DumpDef.layer)
  return &layer_;
}

// -------------------------------------------------------------------

// OAMConfigDef

// repeated .hiai.DumpDef dump_list = 1;
inline int OAMConfigDef::dump_list_size() const {
  return dump_list_.size();
}
inline void OAMConfigDef::clear_dump_list() {
  dump_list_.Clear();
}
inline const ::hiai::DumpDef& OAMConfigDef::dump_list(int index) const {
  // @@protoc_insertion_point(field_get:hiai.OAMConfigDef.dump_list)
  return dump_list_.Get(index);
}
inline ::hiai::DumpDef* OAMConfigDef::mutable_dump_list(int index) {
  // @@protoc_insertion_point(field_mutable:hiai.OAMConfigDef.dump_list)
  return dump_list_.Mutable(index);
}
inline ::hiai::DumpDef* OAMConfigDef::add_dump_list() {
  // @@protoc_insertion_point(field_add:hiai.OAMConfigDef.dump_list)
  return dump_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::hiai::DumpDef >*
OAMConfigDef::mutable_dump_list() {
  // @@protoc_insertion_point(field_mutable_list:hiai.OAMConfigDef.dump_list)
  return &dump_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::hiai::DumpDef >&
OAMConfigDef::dump_list() const {
  // @@protoc_insertion_point(field_list:hiai.OAMConfigDef.dump_list)
  return dump_list_;
}

// bytes dump_path = 2;
inline void OAMConfigDef::clear_dump_path() {
  dump_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OAMConfigDef::dump_path() const {
  // @@protoc_insertion_point(field_get:hiai.OAMConfigDef.dump_path)
  return dump_path_.GetNoArena();
}
inline void OAMConfigDef::set_dump_path(const ::std::string& value) {
  
  dump_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hiai.OAMConfigDef.dump_path)
}
#if LANG_CXX11
inline void OAMConfigDef::set_dump_path(::std::string&& value) {
  
  dump_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hiai.OAMConfigDef.dump_path)
}
#endif
inline void OAMConfigDef::set_dump_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dump_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hiai.OAMConfigDef.dump_path)
}
inline void OAMConfigDef::set_dump_path(const void* value, size_t size) {
  
  dump_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hiai.OAMConfigDef.dump_path)
}
inline ::std::string* OAMConfigDef::mutable_dump_path() {
  
  // @@protoc_insertion_point(field_mutable:hiai.OAMConfigDef.dump_path)
  return dump_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OAMConfigDef::release_dump_path() {
  // @@protoc_insertion_point(field_release:hiai.OAMConfigDef.dump_path)
  
  return dump_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OAMConfigDef::set_allocated_dump_path(::std::string* dump_path) {
  if (dump_path != NULL) {
    
  } else {
    
  }
  dump_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dump_path);
  // @@protoc_insertion_point(field_set_allocated:hiai.OAMConfigDef.dump_path)
}

// -------------------------------------------------------------------

// EngineConfig

// uint32 id = 1;
inline void EngineConfig::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 EngineConfig::id() const {
  // @@protoc_insertion_point(field_get:hiai.EngineConfig.id)
  return id_;
}
inline void EngineConfig::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:hiai.EngineConfig.id)
}

// bytes engine_name = 2;
inline void EngineConfig::clear_engine_name() {
  engine_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EngineConfig::engine_name() const {
  // @@protoc_insertion_point(field_get:hiai.EngineConfig.engine_name)
  return engine_name_.GetNoArena();
}
inline void EngineConfig::set_engine_name(const ::std::string& value) {
  
  engine_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hiai.EngineConfig.engine_name)
}
#if LANG_CXX11
inline void EngineConfig::set_engine_name(::std::string&& value) {
  
  engine_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hiai.EngineConfig.engine_name)
}
#endif
inline void EngineConfig::set_engine_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  engine_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hiai.EngineConfig.engine_name)
}
inline void EngineConfig::set_engine_name(const void* value, size_t size) {
  
  engine_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hiai.EngineConfig.engine_name)
}
inline ::std::string* EngineConfig::mutable_engine_name() {
  
  // @@protoc_insertion_point(field_mutable:hiai.EngineConfig.engine_name)
  return engine_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EngineConfig::release_engine_name() {
  // @@protoc_insertion_point(field_release:hiai.EngineConfig.engine_name)
  
  return engine_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EngineConfig::set_allocated_engine_name(::std::string* engine_name) {
  if (engine_name != NULL) {
    
  } else {
    
  }
  engine_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), engine_name);
  // @@protoc_insertion_point(field_set_allocated:hiai.EngineConfig.engine_name)
}

// repeated bytes so_name = 3;
inline int EngineConfig::so_name_size() const {
  return so_name_.size();
}
inline void EngineConfig::clear_so_name() {
  so_name_.Clear();
}
inline const ::std::string& EngineConfig::so_name(int index) const {
  // @@protoc_insertion_point(field_get:hiai.EngineConfig.so_name)
  return so_name_.Get(index);
}
inline ::std::string* EngineConfig::mutable_so_name(int index) {
  // @@protoc_insertion_point(field_mutable:hiai.EngineConfig.so_name)
  return so_name_.Mutable(index);
}
inline void EngineConfig::set_so_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:hiai.EngineConfig.so_name)
  so_name_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void EngineConfig::set_so_name(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:hiai.EngineConfig.so_name)
  so_name_.Mutable(index)->assign(std::move(value));
}
#endif
inline void EngineConfig::set_so_name(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  so_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:hiai.EngineConfig.so_name)
}
inline void EngineConfig::set_so_name(int index, const void* value, size_t size) {
  so_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:hiai.EngineConfig.so_name)
}
inline ::std::string* EngineConfig::add_so_name() {
  // @@protoc_insertion_point(field_add_mutable:hiai.EngineConfig.so_name)
  return so_name_.Add();
}
inline void EngineConfig::add_so_name(const ::std::string& value) {
  so_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:hiai.EngineConfig.so_name)
}
#if LANG_CXX11
inline void EngineConfig::add_so_name(::std::string&& value) {
  so_name_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:hiai.EngineConfig.so_name)
}
#endif
inline void EngineConfig::add_so_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  so_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:hiai.EngineConfig.so_name)
}
inline void EngineConfig::add_so_name(const void* value, size_t size) {
  so_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:hiai.EngineConfig.so_name)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
EngineConfig::so_name() const {
  // @@protoc_insertion_point(field_list:hiai.EngineConfig.so_name)
  return so_name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
EngineConfig::mutable_so_name() {
  // @@protoc_insertion_point(field_mutable_list:hiai.EngineConfig.so_name)
  return &so_name_;
}

// .hiai.EngineConfig.RunSide side = 4;
inline void EngineConfig::clear_side() {
  side_ = 0;
}
inline ::hiai::EngineConfig_RunSide EngineConfig::side() const {
  // @@protoc_insertion_point(field_get:hiai.EngineConfig.side)
  return static_cast< ::hiai::EngineConfig_RunSide >(side_);
}
inline void EngineConfig::set_side(::hiai::EngineConfig_RunSide value) {
  
  side_ = value;
  // @@protoc_insertion_point(field_set:hiai.EngineConfig.side)
}

// uint32 thread_num = 5;
inline void EngineConfig::clear_thread_num() {
  thread_num_ = 0u;
}
inline ::google::protobuf::uint32 EngineConfig::thread_num() const {
  // @@protoc_insertion_point(field_get:hiai.EngineConfig.thread_num)
  return thread_num_;
}
inline void EngineConfig::set_thread_num(::google::protobuf::uint32 value) {
  
  thread_num_ = value;
  // @@protoc_insertion_point(field_set:hiai.EngineConfig.thread_num)
}

// uint32 thread_priority = 6;
inline void EngineConfig::clear_thread_priority() {
  thread_priority_ = 0u;
}
inline ::google::protobuf::uint32 EngineConfig::thread_priority() const {
  // @@protoc_insertion_point(field_get:hiai.EngineConfig.thread_priority)
  return thread_priority_;
}
inline void EngineConfig::set_thread_priority(::google::protobuf::uint32 value) {
  
  thread_priority_ = value;
  // @@protoc_insertion_point(field_set:hiai.EngineConfig.thread_priority)
}

// uint32 queue_size = 7;
inline void EngineConfig::clear_queue_size() {
  queue_size_ = 0u;
}
inline ::google::protobuf::uint32 EngineConfig::queue_size() const {
  // @@protoc_insertion_point(field_get:hiai.EngineConfig.queue_size)
  return queue_size_;
}
inline void EngineConfig::set_queue_size(::google::protobuf::uint32 value) {
  
  queue_size_ = value;
  // @@protoc_insertion_point(field_set:hiai.EngineConfig.queue_size)
}

// .hiai.AIConfig ai_config = 8;
inline bool EngineConfig::has_ai_config() const {
  return this != internal_default_instance() && ai_config_ != NULL;
}
inline const ::hiai::AIConfig& EngineConfig::ai_config() const {
  const ::hiai::AIConfig* p = ai_config_;
  // @@protoc_insertion_point(field_get:hiai.EngineConfig.ai_config)
  return p != NULL ? *p : *reinterpret_cast<const ::hiai::AIConfig*>(
      &::hiai::_AIConfig_default_instance_);
}
inline ::hiai::AIConfig* EngineConfig::release_ai_config() {
  // @@protoc_insertion_point(field_release:hiai.EngineConfig.ai_config)
  
  ::hiai::AIConfig* temp = ai_config_;
  ai_config_ = NULL;
  return temp;
}
inline ::hiai::AIConfig* EngineConfig::mutable_ai_config() {
  
  if (ai_config_ == NULL) {
    ai_config_ = new ::hiai::AIConfig;
  }
  // @@protoc_insertion_point(field_mutable:hiai.EngineConfig.ai_config)
  return ai_config_;
}
inline void EngineConfig::set_allocated_ai_config(::hiai::AIConfig* ai_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ai_config_);
  }
  if (ai_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ai_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ai_config, submessage_arena);
    }
    
  } else {
    
  }
  ai_config_ = ai_config;
  // @@protoc_insertion_point(field_set_allocated:hiai.EngineConfig.ai_config)
}

// repeated .hiai.AIModelDescription ai_model = 9;
inline int EngineConfig::ai_model_size() const {
  return ai_model_.size();
}
inline const ::hiai::AIModelDescription& EngineConfig::ai_model(int index) const {
  // @@protoc_insertion_point(field_get:hiai.EngineConfig.ai_model)
  return ai_model_.Get(index);
}
inline ::hiai::AIModelDescription* EngineConfig::mutable_ai_model(int index) {
  // @@protoc_insertion_point(field_mutable:hiai.EngineConfig.ai_model)
  return ai_model_.Mutable(index);
}
inline ::hiai::AIModelDescription* EngineConfig::add_ai_model() {
  // @@protoc_insertion_point(field_add:hiai.EngineConfig.ai_model)
  return ai_model_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::hiai::AIModelDescription >*
EngineConfig::mutable_ai_model() {
  // @@protoc_insertion_point(field_mutable_list:hiai.EngineConfig.ai_model)
  return &ai_model_;
}
inline const ::google::protobuf::RepeatedPtrField< ::hiai::AIModelDescription >&
EngineConfig::ai_model() const {
  // @@protoc_insertion_point(field_list:hiai.EngineConfig.ai_model)
  return ai_model_;
}

// repeated bytes internal_so_name = 10;
inline int EngineConfig::internal_so_name_size() const {
  return internal_so_name_.size();
}
inline void EngineConfig::clear_internal_so_name() {
  internal_so_name_.Clear();
}
inline const ::std::string& EngineConfig::internal_so_name(int index) const {
  // @@protoc_insertion_point(field_get:hiai.EngineConfig.internal_so_name)
  return internal_so_name_.Get(index);
}
inline ::std::string* EngineConfig::mutable_internal_so_name(int index) {
  // @@protoc_insertion_point(field_mutable:hiai.EngineConfig.internal_so_name)
  return internal_so_name_.Mutable(index);
}
inline void EngineConfig::set_internal_so_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:hiai.EngineConfig.internal_so_name)
  internal_so_name_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void EngineConfig::set_internal_so_name(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:hiai.EngineConfig.internal_so_name)
  internal_so_name_.Mutable(index)->assign(std::move(value));
}
#endif
inline void EngineConfig::set_internal_so_name(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  internal_so_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:hiai.EngineConfig.internal_so_name)
}
inline void EngineConfig::set_internal_so_name(int index, const void* value, size_t size) {
  internal_so_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:hiai.EngineConfig.internal_so_name)
}
inline ::std::string* EngineConfig::add_internal_so_name() {
  // @@protoc_insertion_point(field_add_mutable:hiai.EngineConfig.internal_so_name)
  return internal_so_name_.Add();
}
inline void EngineConfig::add_internal_so_name(const ::std::string& value) {
  internal_so_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:hiai.EngineConfig.internal_so_name)
}
#if LANG_CXX11
inline void EngineConfig::add_internal_so_name(::std::string&& value) {
  internal_so_name_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:hiai.EngineConfig.internal_so_name)
}
#endif
inline void EngineConfig::add_internal_so_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  internal_so_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:hiai.EngineConfig.internal_so_name)
}
inline void EngineConfig::add_internal_so_name(const void* value, size_t size) {
  internal_so_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:hiai.EngineConfig.internal_so_name)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
EngineConfig::internal_so_name() const {
  // @@protoc_insertion_point(field_list:hiai.EngineConfig.internal_so_name)
  return internal_so_name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
EngineConfig::mutable_internal_so_name() {
  // @@protoc_insertion_point(field_mutable_list:hiai.EngineConfig.internal_so_name)
  return &internal_so_name_;
}

// uint32 wait_inputdata_max_time = 12;
inline void EngineConfig::clear_wait_inputdata_max_time() {
  wait_inputdata_max_time_ = 0u;
}
inline ::google::protobuf::uint32 EngineConfig::wait_inputdata_max_time() const {
  // @@protoc_insertion_point(field_get:hiai.EngineConfig.wait_inputdata_max_time)
  return wait_inputdata_max_time_;
}
inline void EngineConfig::set_wait_inputdata_max_time(::google::protobuf::uint32 value) {
  
  wait_inputdata_max_time_ = value;
  // @@protoc_insertion_point(field_set:hiai.EngineConfig.wait_inputdata_max_time)
}

// uint32 holdModelFileFlag = 13;
inline void EngineConfig::clear_holdmodelfileflag() {
  holdmodelfileflag_ = 0u;
}
inline ::google::protobuf::uint32 EngineConfig::holdmodelfileflag() const {
  // @@protoc_insertion_point(field_get:hiai.EngineConfig.holdModelFileFlag)
  return holdmodelfileflag_;
}
inline void EngineConfig::set_holdmodelfileflag(::google::protobuf::uint32 value) {
  
  holdmodelfileflag_ = value;
  // @@protoc_insertion_point(field_set:hiai.EngineConfig.holdModelFileFlag)
}

// .hiai.OAMConfigDef oam_config = 14;
inline bool EngineConfig::has_oam_config() const {
  return this != internal_default_instance() && oam_config_ != NULL;
}
inline void EngineConfig::clear_oam_config() {
  if (GetArenaNoVirtual() == NULL && oam_config_ != NULL) {
    delete oam_config_;
  }
  oam_config_ = NULL;
}
inline const ::hiai::OAMConfigDef& EngineConfig::oam_config() const {
  const ::hiai::OAMConfigDef* p = oam_config_;
  // @@protoc_insertion_point(field_get:hiai.EngineConfig.oam_config)
  return p != NULL ? *p : *reinterpret_cast<const ::hiai::OAMConfigDef*>(
      &::hiai::_OAMConfigDef_default_instance_);
}
inline ::hiai::OAMConfigDef* EngineConfig::release_oam_config() {
  // @@protoc_insertion_point(field_release:hiai.EngineConfig.oam_config)
  
  ::hiai::OAMConfigDef* temp = oam_config_;
  oam_config_ = NULL;
  return temp;
}
inline ::hiai::OAMConfigDef* EngineConfig::mutable_oam_config() {
  
  if (oam_config_ == NULL) {
    oam_config_ = new ::hiai::OAMConfigDef;
  }
  // @@protoc_insertion_point(field_mutable:hiai.EngineConfig.oam_config)
  return oam_config_;
}
inline void EngineConfig::set_allocated_oam_config(::hiai::OAMConfigDef* oam_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete oam_config_;
  }
  if (oam_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      oam_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, oam_config, submessage_arena);
    }
    
  } else {
    
  }
  oam_config_ = oam_config;
  // @@protoc_insertion_point(field_set_allocated:hiai.EngineConfig.oam_config)
}

// bool is_repeat_timeout_flag = 15;
inline void EngineConfig::clear_is_repeat_timeout_flag() {
  is_repeat_timeout_flag_ = false;
}
inline bool EngineConfig::is_repeat_timeout_flag() const {
  // @@protoc_insertion_point(field_get:hiai.EngineConfig.is_repeat_timeout_flag)
  return is_repeat_timeout_flag_;
}
inline void EngineConfig::set_is_repeat_timeout_flag(bool value) {
  
  is_repeat_timeout_flag_ = value;
  // @@protoc_insertion_point(field_set:hiai.EngineConfig.is_repeat_timeout_flag)
}

// -------------------------------------------------------------------

// ConnectConfig

// uint32 src_engine_id = 1;
inline void ConnectConfig::clear_src_engine_id() {
  src_engine_id_ = 0u;
}
inline ::google::protobuf::uint32 ConnectConfig::src_engine_id() const {
  // @@protoc_insertion_point(field_get:hiai.ConnectConfig.src_engine_id)
  return src_engine_id_;
}
inline void ConnectConfig::set_src_engine_id(::google::protobuf::uint32 value) {
  
  src_engine_id_ = value;
  // @@protoc_insertion_point(field_set:hiai.ConnectConfig.src_engine_id)
}

// uint32 src_port_id = 2;
inline void ConnectConfig::clear_src_port_id() {
  src_port_id_ = 0u;
}
inline ::google::protobuf::uint32 ConnectConfig::src_port_id() const {
  // @@protoc_insertion_point(field_get:hiai.ConnectConfig.src_port_id)
  return src_port_id_;
}
inline void ConnectConfig::set_src_port_id(::google::protobuf::uint32 value) {
  
  src_port_id_ = value;
  // @@protoc_insertion_point(field_set:hiai.ConnectConfig.src_port_id)
}

// uint32 target_graph_id = 3;
inline void ConnectConfig::clear_target_graph_id() {
  target_graph_id_ = 0u;
}
inline ::google::protobuf::uint32 ConnectConfig::target_graph_id() const {
  // @@protoc_insertion_point(field_get:hiai.ConnectConfig.target_graph_id)
  return target_graph_id_;
}
inline void ConnectConfig::set_target_graph_id(::google::protobuf::uint32 value) {
  
  target_graph_id_ = value;
  // @@protoc_insertion_point(field_set:hiai.ConnectConfig.target_graph_id)
}

// uint32 target_engine_id = 4;
inline void ConnectConfig::clear_target_engine_id() {
  target_engine_id_ = 0u;
}
inline ::google::protobuf::uint32 ConnectConfig::target_engine_id() const {
  // @@protoc_insertion_point(field_get:hiai.ConnectConfig.target_engine_id)
  return target_engine_id_;
}
inline void ConnectConfig::set_target_engine_id(::google::protobuf::uint32 value) {
  
  target_engine_id_ = value;
  // @@protoc_insertion_point(field_set:hiai.ConnectConfig.target_engine_id)
}

// uint32 target_port_id = 5;
inline void ConnectConfig::clear_target_port_id() {
  target_port_id_ = 0u;
}
inline ::google::protobuf::uint32 ConnectConfig::target_port_id() const {
  // @@protoc_insertion_point(field_get:hiai.ConnectConfig.target_port_id)
  return target_port_id_;
}
inline void ConnectConfig::set_target_port_id(::google::protobuf::uint32 value) {
  
  target_port_id_ = value;
  // @@protoc_insertion_point(field_set:hiai.ConnectConfig.target_port_id)
}

// bool receive_memory_without_dvpp = 6;
inline void ConnectConfig::clear_receive_memory_without_dvpp() {
  receive_memory_without_dvpp_ = false;
}
inline bool ConnectConfig::receive_memory_without_dvpp() const {
  // @@protoc_insertion_point(field_get:hiai.ConnectConfig.receive_memory_without_dvpp)
  return receive_memory_without_dvpp_;
}
inline void ConnectConfig::set_receive_memory_without_dvpp(bool value) {
  
  receive_memory_without_dvpp_ = value;
  // @@protoc_insertion_point(field_set:hiai.ConnectConfig.receive_memory_without_dvpp)
}

// -------------------------------------------------------------------

// GraphConfig

// uint32 graph_id = 1;
inline void GraphConfig::clear_graph_id() {
  graph_id_ = 0u;
}
inline ::google::protobuf::uint32 GraphConfig::graph_id() const {
  // @@protoc_insertion_point(field_get:hiai.GraphConfig.graph_id)
  return graph_id_;
}
inline void GraphConfig::set_graph_id(::google::protobuf::uint32 value) {
  
  graph_id_ = value;
  // @@protoc_insertion_point(field_set:hiai.GraphConfig.graph_id)
}

// int32 priority = 2;
inline void GraphConfig::clear_priority() {
  priority_ = 0;
}
inline ::google::protobuf::int32 GraphConfig::priority() const {
  // @@protoc_insertion_point(field_get:hiai.GraphConfig.priority)
  return priority_;
}
inline void GraphConfig::set_priority(::google::protobuf::int32 value) {
  
  priority_ = value;
  // @@protoc_insertion_point(field_set:hiai.GraphConfig.priority)
}

// bytes device_id = 3;
inline void GraphConfig::clear_device_id() {
  device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GraphConfig::device_id() const {
  // @@protoc_insertion_point(field_get:hiai.GraphConfig.device_id)
  return device_id_.GetNoArena();
}
inline void GraphConfig::set_device_id(const ::std::string& value) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hiai.GraphConfig.device_id)
}
#if LANG_CXX11
inline void GraphConfig::set_device_id(::std::string&& value) {
  
  device_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hiai.GraphConfig.device_id)
}
#endif
inline void GraphConfig::set_device_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hiai.GraphConfig.device_id)
}
inline void GraphConfig::set_device_id(const void* value, size_t size) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hiai.GraphConfig.device_id)
}
inline ::std::string* GraphConfig::mutable_device_id() {
  
  // @@protoc_insertion_point(field_mutable:hiai.GraphConfig.device_id)
  return device_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GraphConfig::release_device_id() {
  // @@protoc_insertion_point(field_release:hiai.GraphConfig.device_id)
  
  return device_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GraphConfig::set_allocated_device_id(::std::string* device_id) {
  if (device_id != NULL) {
    
  } else {
    
  }
  device_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_id);
  // @@protoc_insertion_point(field_set_allocated:hiai.GraphConfig.device_id)
}

// repeated .hiai.EngineConfig engines = 4;
inline int GraphConfig::engines_size() const {
  return engines_.size();
}
inline void GraphConfig::clear_engines() {
  engines_.Clear();
}
inline const ::hiai::EngineConfig& GraphConfig::engines(int index) const {
  // @@protoc_insertion_point(field_get:hiai.GraphConfig.engines)
  return engines_.Get(index);
}
inline ::hiai::EngineConfig* GraphConfig::mutable_engines(int index) {
  // @@protoc_insertion_point(field_mutable:hiai.GraphConfig.engines)
  return engines_.Mutable(index);
}
inline ::hiai::EngineConfig* GraphConfig::add_engines() {
  // @@protoc_insertion_point(field_add:hiai.GraphConfig.engines)
  return engines_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::hiai::EngineConfig >*
GraphConfig::mutable_engines() {
  // @@protoc_insertion_point(field_mutable_list:hiai.GraphConfig.engines)
  return &engines_;
}
inline const ::google::protobuf::RepeatedPtrField< ::hiai::EngineConfig >&
GraphConfig::engines() const {
  // @@protoc_insertion_point(field_list:hiai.GraphConfig.engines)
  return engines_;
}

// repeated .hiai.ConnectConfig connects = 5;
inline int GraphConfig::connects_size() const {
  return connects_.size();
}
inline void GraphConfig::clear_connects() {
  connects_.Clear();
}
inline const ::hiai::ConnectConfig& GraphConfig::connects(int index) const {
  // @@protoc_insertion_point(field_get:hiai.GraphConfig.connects)
  return connects_.Get(index);
}
inline ::hiai::ConnectConfig* GraphConfig::mutable_connects(int index) {
  // @@protoc_insertion_point(field_mutable:hiai.GraphConfig.connects)
  return connects_.Mutable(index);
}
inline ::hiai::ConnectConfig* GraphConfig::add_connects() {
  // @@protoc_insertion_point(field_add:hiai.GraphConfig.connects)
  return connects_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::hiai::ConnectConfig >*
GraphConfig::mutable_connects() {
  // @@protoc_insertion_point(field_mutable_list:hiai.GraphConfig.connects)
  return &connects_;
}
inline const ::google::protobuf::RepeatedPtrField< ::hiai::ConnectConfig >&
GraphConfig::connects() const {
  // @@protoc_insertion_point(field_list:hiai.GraphConfig.connects)
  return connects_;
}

// -------------------------------------------------------------------

// GraphConfigList

// repeated .hiai.GraphConfig graphs = 1;
inline int GraphConfigList::graphs_size() const {
  return graphs_.size();
}
inline void GraphConfigList::clear_graphs() {
  graphs_.Clear();
}
inline const ::hiai::GraphConfig& GraphConfigList::graphs(int index) const {
  // @@protoc_insertion_point(field_get:hiai.GraphConfigList.graphs)
  return graphs_.Get(index);
}
inline ::hiai::GraphConfig* GraphConfigList::mutable_graphs(int index) {
  // @@protoc_insertion_point(field_mutable:hiai.GraphConfigList.graphs)
  return graphs_.Mutable(index);
}
inline ::hiai::GraphConfig* GraphConfigList::add_graphs() {
  // @@protoc_insertion_point(field_add:hiai.GraphConfigList.graphs)
  return graphs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::hiai::GraphConfig >*
GraphConfigList::mutable_graphs() {
  // @@protoc_insertion_point(field_mutable_list:hiai.GraphConfigList.graphs)
  return &graphs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::hiai::GraphConfig >&
GraphConfigList::graphs() const {
  // @@protoc_insertion_point(field_list:hiai.GraphConfigList.graphs)
  return graphs_;
}

// -------------------------------------------------------------------

// ProfileConfig

// bytes matrix_profiling = 1;
inline void ProfileConfig::clear_matrix_profiling() {
  matrix_profiling_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProfileConfig::matrix_profiling() const {
  // @@protoc_insertion_point(field_get:hiai.ProfileConfig.matrix_profiling)
  return matrix_profiling_.GetNoArena();
}
inline void ProfileConfig::set_matrix_profiling(const ::std::string& value) {
  
  matrix_profiling_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hiai.ProfileConfig.matrix_profiling)
}
#if LANG_CXX11
inline void ProfileConfig::set_matrix_profiling(::std::string&& value) {
  
  matrix_profiling_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hiai.ProfileConfig.matrix_profiling)
}
#endif
inline void ProfileConfig::set_matrix_profiling(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  matrix_profiling_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hiai.ProfileConfig.matrix_profiling)
}
inline void ProfileConfig::set_matrix_profiling(const void* value, size_t size) {
  
  matrix_profiling_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hiai.ProfileConfig.matrix_profiling)
}
inline ::std::string* ProfileConfig::mutable_matrix_profiling() {
  
  // @@protoc_insertion_point(field_mutable:hiai.ProfileConfig.matrix_profiling)
  return matrix_profiling_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProfileConfig::release_matrix_profiling() {
  // @@protoc_insertion_point(field_release:hiai.ProfileConfig.matrix_profiling)
  
  return matrix_profiling_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProfileConfig::set_allocated_matrix_profiling(::std::string* matrix_profiling) {
  if (matrix_profiling != NULL) {
    
  } else {
    
  }
  matrix_profiling_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), matrix_profiling);
  // @@protoc_insertion_point(field_set_allocated:hiai.ProfileConfig.matrix_profiling)
}

// bytes ome_profiling = 2;
inline void ProfileConfig::clear_ome_profiling() {
  ome_profiling_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProfileConfig::ome_profiling() const {
  // @@protoc_insertion_point(field_get:hiai.ProfileConfig.ome_profiling)
  return ome_profiling_.GetNoArena();
}
inline void ProfileConfig::set_ome_profiling(const ::std::string& value) {
  
  ome_profiling_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hiai.ProfileConfig.ome_profiling)
}
#if LANG_CXX11
inline void ProfileConfig::set_ome_profiling(::std::string&& value) {
  
  ome_profiling_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hiai.ProfileConfig.ome_profiling)
}
#endif
inline void ProfileConfig::set_ome_profiling(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ome_profiling_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hiai.ProfileConfig.ome_profiling)
}
inline void ProfileConfig::set_ome_profiling(const void* value, size_t size) {
  
  ome_profiling_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hiai.ProfileConfig.ome_profiling)
}
inline ::std::string* ProfileConfig::mutable_ome_profiling() {
  
  // @@protoc_insertion_point(field_mutable:hiai.ProfileConfig.ome_profiling)
  return ome_profiling_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProfileConfig::release_ome_profiling() {
  // @@protoc_insertion_point(field_release:hiai.ProfileConfig.ome_profiling)
  
  return ome_profiling_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProfileConfig::set_allocated_ome_profiling(::std::string* ome_profiling) {
  if (ome_profiling != NULL) {
    
  } else {
    
  }
  ome_profiling_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ome_profiling);
  // @@protoc_insertion_point(field_set_allocated:hiai.ProfileConfig.ome_profiling)
}

// bytes cce_profiling = 3;
inline void ProfileConfig::clear_cce_profiling() {
  cce_profiling_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProfileConfig::cce_profiling() const {
  // @@protoc_insertion_point(field_get:hiai.ProfileConfig.cce_profiling)
  return cce_profiling_.GetNoArena();
}
inline void ProfileConfig::set_cce_profiling(const ::std::string& value) {
  
  cce_profiling_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hiai.ProfileConfig.cce_profiling)
}
#if LANG_CXX11
inline void ProfileConfig::set_cce_profiling(::std::string&& value) {
  
  cce_profiling_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hiai.ProfileConfig.cce_profiling)
}
#endif
inline void ProfileConfig::set_cce_profiling(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cce_profiling_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hiai.ProfileConfig.cce_profiling)
}
inline void ProfileConfig::set_cce_profiling(const void* value, size_t size) {
  
  cce_profiling_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hiai.ProfileConfig.cce_profiling)
}
inline ::std::string* ProfileConfig::mutable_cce_profiling() {
  
  // @@protoc_insertion_point(field_mutable:hiai.ProfileConfig.cce_profiling)
  return cce_profiling_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProfileConfig::release_cce_profiling() {
  // @@protoc_insertion_point(field_release:hiai.ProfileConfig.cce_profiling)
  
  return cce_profiling_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProfileConfig::set_allocated_cce_profiling(::std::string* cce_profiling) {
  if (cce_profiling != NULL) {
    
  } else {
    
  }
  cce_profiling_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cce_profiling);
  // @@protoc_insertion_point(field_set_allocated:hiai.ProfileConfig.cce_profiling)
}

// bytes runtime_profiling = 4;
inline void ProfileConfig::clear_runtime_profiling() {
  runtime_profiling_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProfileConfig::runtime_profiling() const {
  // @@protoc_insertion_point(field_get:hiai.ProfileConfig.runtime_profiling)
  return runtime_profiling_.GetNoArena();
}
inline void ProfileConfig::set_runtime_profiling(const ::std::string& value) {
  
  runtime_profiling_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hiai.ProfileConfig.runtime_profiling)
}
#if LANG_CXX11
inline void ProfileConfig::set_runtime_profiling(::std::string&& value) {
  
  runtime_profiling_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hiai.ProfileConfig.runtime_profiling)
}
#endif
inline void ProfileConfig::set_runtime_profiling(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  runtime_profiling_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hiai.ProfileConfig.runtime_profiling)
}
inline void ProfileConfig::set_runtime_profiling(const void* value, size_t size) {
  
  runtime_profiling_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hiai.ProfileConfig.runtime_profiling)
}
inline ::std::string* ProfileConfig::mutable_runtime_profiling() {
  
  // @@protoc_insertion_point(field_mutable:hiai.ProfileConfig.runtime_profiling)
  return runtime_profiling_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProfileConfig::release_runtime_profiling() {
  // @@protoc_insertion_point(field_release:hiai.ProfileConfig.runtime_profiling)
  
  return runtime_profiling_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProfileConfig::set_allocated_runtime_profiling(::std::string* runtime_profiling) {
  if (runtime_profiling != NULL) {
    
  } else {
    
  }
  runtime_profiling_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), runtime_profiling);
  // @@protoc_insertion_point(field_set_allocated:hiai.ProfileConfig.runtime_profiling)
}

// bytes PROFILER_TARGET = 5;
inline void ProfileConfig::clear_profiler_target() {
  profiler_target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProfileConfig::profiler_target() const {
  // @@protoc_insertion_point(field_get:hiai.ProfileConfig.PROFILER_TARGET)
  return profiler_target_.GetNoArena();
}
inline void ProfileConfig::set_profiler_target(const ::std::string& value) {
  
  profiler_target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hiai.ProfileConfig.PROFILER_TARGET)
}
#if LANG_CXX11
inline void ProfileConfig::set_profiler_target(::std::string&& value) {
  
  profiler_target_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hiai.ProfileConfig.PROFILER_TARGET)
}
#endif
inline void ProfileConfig::set_profiler_target(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  profiler_target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hiai.ProfileConfig.PROFILER_TARGET)
}
inline void ProfileConfig::set_profiler_target(const void* value, size_t size) {
  
  profiler_target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hiai.ProfileConfig.PROFILER_TARGET)
}
inline ::std::string* ProfileConfig::mutable_profiler_target() {
  
  // @@protoc_insertion_point(field_mutable:hiai.ProfileConfig.PROFILER_TARGET)
  return profiler_target_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProfileConfig::release_profiler_target() {
  // @@protoc_insertion_point(field_release:hiai.ProfileConfig.PROFILER_TARGET)
  
  return profiler_target_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProfileConfig::set_allocated_profiler_target(::std::string* profiler_target) {
  if (profiler_target != NULL) {
    
  } else {
    
  }
  profiler_target_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), profiler_target);
  // @@protoc_insertion_point(field_set_allocated:hiai.ProfileConfig.PROFILER_TARGET)
}

// bytes PROFILER_JOBCTX = 6;
inline void ProfileConfig::clear_profiler_jobctx() {
  profiler_jobctx_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProfileConfig::profiler_jobctx() const {
  // @@protoc_insertion_point(field_get:hiai.ProfileConfig.PROFILER_JOBCTX)
  return profiler_jobctx_.GetNoArena();
}
inline void ProfileConfig::set_profiler_jobctx(const ::std::string& value) {
  
  profiler_jobctx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hiai.ProfileConfig.PROFILER_JOBCTX)
}
#if LANG_CXX11
inline void ProfileConfig::set_profiler_jobctx(::std::string&& value) {
  
  profiler_jobctx_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hiai.ProfileConfig.PROFILER_JOBCTX)
}
#endif
inline void ProfileConfig::set_profiler_jobctx(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  profiler_jobctx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hiai.ProfileConfig.PROFILER_JOBCTX)
}
inline void ProfileConfig::set_profiler_jobctx(const void* value, size_t size) {
  
  profiler_jobctx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hiai.ProfileConfig.PROFILER_JOBCTX)
}
inline ::std::string* ProfileConfig::mutable_profiler_jobctx() {
  
  // @@protoc_insertion_point(field_mutable:hiai.ProfileConfig.PROFILER_JOBCTX)
  return profiler_jobctx_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProfileConfig::release_profiler_jobctx() {
  // @@protoc_insertion_point(field_release:hiai.ProfileConfig.PROFILER_JOBCTX)
  
  return profiler_jobctx_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProfileConfig::set_allocated_profiler_jobctx(::std::string* profiler_jobctx) {
  if (profiler_jobctx != NULL) {
    
  } else {
    
  }
  profiler_jobctx_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), profiler_jobctx);
  // @@protoc_insertion_point(field_set_allocated:hiai.ProfileConfig.PROFILER_JOBCTX)
}

// bytes src_path = 7;
inline void ProfileConfig::clear_src_path() {
  src_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProfileConfig::src_path() const {
  // @@protoc_insertion_point(field_get:hiai.ProfileConfig.src_path)
  return src_path_.GetNoArena();
}
inline void ProfileConfig::set_src_path(const ::std::string& value) {
  
  src_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hiai.ProfileConfig.src_path)
}
#if LANG_CXX11
inline void ProfileConfig::set_src_path(::std::string&& value) {
  
  src_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hiai.ProfileConfig.src_path)
}
#endif
inline void ProfileConfig::set_src_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  src_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hiai.ProfileConfig.src_path)
}
inline void ProfileConfig::set_src_path(const void* value, size_t size) {
  
  src_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hiai.ProfileConfig.src_path)
}
inline ::std::string* ProfileConfig::mutable_src_path() {
  
  // @@protoc_insertion_point(field_mutable:hiai.ProfileConfig.src_path)
  return src_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProfileConfig::release_src_path() {
  // @@protoc_insertion_point(field_release:hiai.ProfileConfig.src_path)
  
  return src_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProfileConfig::set_allocated_src_path(::std::string* src_path) {
  if (src_path != NULL) {
    
  } else {
    
  }
  src_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src_path);
  // @@protoc_insertion_point(field_set_allocated:hiai.ProfileConfig.src_path)
}

// bytes dest_path = 8;
inline void ProfileConfig::clear_dest_path() {
  dest_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProfileConfig::dest_path() const {
  // @@protoc_insertion_point(field_get:hiai.ProfileConfig.dest_path)
  return dest_path_.GetNoArena();
}
inline void ProfileConfig::set_dest_path(const ::std::string& value) {
  
  dest_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hiai.ProfileConfig.dest_path)
}
#if LANG_CXX11
inline void ProfileConfig::set_dest_path(::std::string&& value) {
  
  dest_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hiai.ProfileConfig.dest_path)
}
#endif
inline void ProfileConfig::set_dest_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dest_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hiai.ProfileConfig.dest_path)
}
inline void ProfileConfig::set_dest_path(const void* value, size_t size) {
  
  dest_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hiai.ProfileConfig.dest_path)
}
inline ::std::string* ProfileConfig::mutable_dest_path() {
  
  // @@protoc_insertion_point(field_mutable:hiai.ProfileConfig.dest_path)
  return dest_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProfileConfig::release_dest_path() {
  // @@protoc_insertion_point(field_release:hiai.ProfileConfig.dest_path)
  
  return dest_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProfileConfig::set_allocated_dest_path(::std::string* dest_path) {
  if (dest_path != NULL) {
    
  } else {
    
  }
  dest_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dest_path);
  // @@protoc_insertion_point(field_set_allocated:hiai.ProfileConfig.dest_path)
}

// bytes runtime_config = 9;
inline void ProfileConfig::clear_runtime_config() {
  runtime_config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProfileConfig::runtime_config() const {
  // @@protoc_insertion_point(field_get:hiai.ProfileConfig.runtime_config)
  return runtime_config_.GetNoArena();
}
inline void ProfileConfig::set_runtime_config(const ::std::string& value) {
  
  runtime_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hiai.ProfileConfig.runtime_config)
}
#if LANG_CXX11
inline void ProfileConfig::set_runtime_config(::std::string&& value) {
  
  runtime_config_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hiai.ProfileConfig.runtime_config)
}
#endif
inline void ProfileConfig::set_runtime_config(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  runtime_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hiai.ProfileConfig.runtime_config)
}
inline void ProfileConfig::set_runtime_config(const void* value, size_t size) {
  
  runtime_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hiai.ProfileConfig.runtime_config)
}
inline ::std::string* ProfileConfig::mutable_runtime_config() {
  
  // @@protoc_insertion_point(field_mutable:hiai.ProfileConfig.runtime_config)
  return runtime_config_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProfileConfig::release_runtime_config() {
  // @@protoc_insertion_point(field_release:hiai.ProfileConfig.runtime_config)
  
  return runtime_config_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProfileConfig::set_allocated_runtime_config(::std::string* runtime_config) {
  if (runtime_config != NULL) {
    
  } else {
    
  }
  runtime_config_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), runtime_config);
  // @@protoc_insertion_point(field_set_allocated:hiai.ProfileConfig.runtime_config)
}

// bytes RTS_PATH = 10;
inline void ProfileConfig::clear_rts_path() {
  rts_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProfileConfig::rts_path() const {
  // @@protoc_insertion_point(field_get:hiai.ProfileConfig.RTS_PATH)
  return rts_path_.GetNoArena();
}
inline void ProfileConfig::set_rts_path(const ::std::string& value) {
  
  rts_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hiai.ProfileConfig.RTS_PATH)
}
#if LANG_CXX11
inline void ProfileConfig::set_rts_path(::std::string&& value) {
  
  rts_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hiai.ProfileConfig.RTS_PATH)
}
#endif
inline void ProfileConfig::set_rts_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  rts_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hiai.ProfileConfig.RTS_PATH)
}
inline void ProfileConfig::set_rts_path(const void* value, size_t size) {
  
  rts_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hiai.ProfileConfig.RTS_PATH)
}
inline ::std::string* ProfileConfig::mutable_rts_path() {
  
  // @@protoc_insertion_point(field_mutable:hiai.ProfileConfig.RTS_PATH)
  return rts_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProfileConfig::release_rts_path() {
  // @@protoc_insertion_point(field_release:hiai.ProfileConfig.RTS_PATH)
  
  return rts_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProfileConfig::set_allocated_rts_path(::std::string* rts_path) {
  if (rts_path != NULL) {
    
  } else {
    
  }
  rts_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rts_path);
  // @@protoc_insertion_point(field_set_allocated:hiai.ProfileConfig.RTS_PATH)
}

// bytes profiler_jobctx_path = 11;
inline void ProfileConfig::clear_profiler_jobctx_path() {
  profiler_jobctx_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProfileConfig::profiler_jobctx_path() const {
  // @@protoc_insertion_point(field_get:hiai.ProfileConfig.profiler_jobctx_path)
  return profiler_jobctx_path_.GetNoArena();
}
inline void ProfileConfig::set_profiler_jobctx_path(const ::std::string& value) {
  
  profiler_jobctx_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hiai.ProfileConfig.profiler_jobctx_path)
}
#if LANG_CXX11
inline void ProfileConfig::set_profiler_jobctx_path(::std::string&& value) {
  
  profiler_jobctx_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hiai.ProfileConfig.profiler_jobctx_path)
}
#endif
inline void ProfileConfig::set_profiler_jobctx_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  profiler_jobctx_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hiai.ProfileConfig.profiler_jobctx_path)
}
inline void ProfileConfig::set_profiler_jobctx_path(const void* value, size_t size) {
  
  profiler_jobctx_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hiai.ProfileConfig.profiler_jobctx_path)
}
inline ::std::string* ProfileConfig::mutable_profiler_jobctx_path() {
  
  // @@protoc_insertion_point(field_mutable:hiai.ProfileConfig.profiler_jobctx_path)
  return profiler_jobctx_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProfileConfig::release_profiler_jobctx_path() {
  // @@protoc_insertion_point(field_release:hiai.ProfileConfig.profiler_jobctx_path)
  
  return profiler_jobctx_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProfileConfig::set_allocated_profiler_jobctx_path(::std::string* profiler_jobctx_path) {
  if (profiler_jobctx_path != NULL) {
    
  } else {
    
  }
  profiler_jobctx_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), profiler_jobctx_path);
  // @@protoc_insertion_point(field_set_allocated:hiai.ProfileConfig.profiler_jobctx_path)
}

// bytes profiler_target_path = 12;
inline void ProfileConfig::clear_profiler_target_path() {
  profiler_target_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProfileConfig::profiler_target_path() const {
  // @@protoc_insertion_point(field_get:hiai.ProfileConfig.profiler_target_path)
  return profiler_target_path_.GetNoArena();
}
inline void ProfileConfig::set_profiler_target_path(const ::std::string& value) {
  
  profiler_target_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hiai.ProfileConfig.profiler_target_path)
}
#if LANG_CXX11
inline void ProfileConfig::set_profiler_target_path(::std::string&& value) {
  
  profiler_target_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hiai.ProfileConfig.profiler_target_path)
}
#endif
inline void ProfileConfig::set_profiler_target_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  profiler_target_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hiai.ProfileConfig.profiler_target_path)
}
inline void ProfileConfig::set_profiler_target_path(const void* value, size_t size) {
  
  profiler_target_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hiai.ProfileConfig.profiler_target_path)
}
inline ::std::string* ProfileConfig::mutable_profiler_target_path() {
  
  // @@protoc_insertion_point(field_mutable:hiai.ProfileConfig.profiler_target_path)
  return profiler_target_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProfileConfig::release_profiler_target_path() {
  // @@protoc_insertion_point(field_release:hiai.ProfileConfig.profiler_target_path)
  
  return profiler_target_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProfileConfig::set_allocated_profiler_target_path(::std::string* profiler_target_path) {
  if (profiler_target_path != NULL) {
    
  } else {
    
  }
  profiler_target_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), profiler_target_path);
  // @@protoc_insertion_point(field_set_allocated:hiai.ProfileConfig.profiler_target_path)
}

// -------------------------------------------------------------------

// GraphUpdateConfig

// .hiai.GraphConfig updataGraphConfig = 1;
inline bool GraphUpdateConfig::has_updatagraphconfig() const {
  return this != internal_default_instance() && updatagraphconfig_ != NULL;
}
inline void GraphUpdateConfig::clear_updatagraphconfig() {
  if (GetArenaNoVirtual() == NULL && updatagraphconfig_ != NULL) {
    delete updatagraphconfig_;
  }
  updatagraphconfig_ = NULL;
}
inline const ::hiai::GraphConfig& GraphUpdateConfig::updatagraphconfig() const {
  const ::hiai::GraphConfig* p = updatagraphconfig_;
  // @@protoc_insertion_point(field_get:hiai.GraphUpdateConfig.updataGraphConfig)
  return p != NULL ? *p : *reinterpret_cast<const ::hiai::GraphConfig*>(
      &::hiai::_GraphConfig_default_instance_);
}
inline ::hiai::GraphConfig* GraphUpdateConfig::release_updatagraphconfig() {
  // @@protoc_insertion_point(field_release:hiai.GraphUpdateConfig.updataGraphConfig)
  
  ::hiai::GraphConfig* temp = updatagraphconfig_;
  updatagraphconfig_ = NULL;
  return temp;
}
inline ::hiai::GraphConfig* GraphUpdateConfig::mutable_updatagraphconfig() {
  
  if (updatagraphconfig_ == NULL) {
    updatagraphconfig_ = new ::hiai::GraphConfig;
  }
  // @@protoc_insertion_point(field_mutable:hiai.GraphUpdateConfig.updataGraphConfig)
  return updatagraphconfig_;
}
inline void GraphUpdateConfig::set_allocated_updatagraphconfig(::hiai::GraphConfig* updatagraphconfig) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete updatagraphconfig_;
  }
  if (updatagraphconfig) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      updatagraphconfig = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, updatagraphconfig, submessage_arena);
    }
    
  } else {
    
  }
  updatagraphconfig_ = updatagraphconfig;
  // @@protoc_insertion_point(field_set_allocated:hiai.GraphUpdateConfig.updataGraphConfig)
}

// repeated uint32 del_engine_ids = 2;
inline int GraphUpdateConfig::del_engine_ids_size() const {
  return del_engine_ids_.size();
}
inline void GraphUpdateConfig::clear_del_engine_ids() {
  del_engine_ids_.Clear();
}
inline ::google::protobuf::uint32 GraphUpdateConfig::del_engine_ids(int index) const {
  // @@protoc_insertion_point(field_get:hiai.GraphUpdateConfig.del_engine_ids)
  return del_engine_ids_.Get(index);
}
inline void GraphUpdateConfig::set_del_engine_ids(int index, ::google::protobuf::uint32 value) {
  del_engine_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:hiai.GraphUpdateConfig.del_engine_ids)
}
inline void GraphUpdateConfig::add_del_engine_ids(::google::protobuf::uint32 value) {
  del_engine_ids_.Add(value);
  // @@protoc_insertion_point(field_add:hiai.GraphUpdateConfig.del_engine_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GraphUpdateConfig::del_engine_ids() const {
  // @@protoc_insertion_point(field_list:hiai.GraphUpdateConfig.del_engine_ids)
  return del_engine_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GraphUpdateConfig::mutable_del_engine_ids() {
  // @@protoc_insertion_point(field_mutable_list:hiai.GraphUpdateConfig.del_engine_ids)
  return &del_engine_ids_;
}

// repeated .hiai.ConnectConfig del_connects = 3;
inline int GraphUpdateConfig::del_connects_size() const {
  return del_connects_.size();
}
inline void GraphUpdateConfig::clear_del_connects() {
  del_connects_.Clear();
}
inline const ::hiai::ConnectConfig& GraphUpdateConfig::del_connects(int index) const {
  // @@protoc_insertion_point(field_get:hiai.GraphUpdateConfig.del_connects)
  return del_connects_.Get(index);
}
inline ::hiai::ConnectConfig* GraphUpdateConfig::mutable_del_connects(int index) {
  // @@protoc_insertion_point(field_mutable:hiai.GraphUpdateConfig.del_connects)
  return del_connects_.Mutable(index);
}
inline ::hiai::ConnectConfig* GraphUpdateConfig::add_del_connects() {
  // @@protoc_insertion_point(field_add:hiai.GraphUpdateConfig.del_connects)
  return del_connects_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::hiai::ConnectConfig >*
GraphUpdateConfig::mutable_del_connects() {
  // @@protoc_insertion_point(field_mutable_list:hiai.GraphUpdateConfig.del_connects)
  return &del_connects_;
}
inline const ::google::protobuf::RepeatedPtrField< ::hiai::ConnectConfig >&
GraphUpdateConfig::del_connects() const {
  // @@protoc_insertion_point(field_list:hiai.GraphUpdateConfig.del_connects)
  return del_connects_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace hiai

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::hiai::EngineConfig_RunSide> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::hiai::EngineConfig_RunSide>() {
  return ::hiai::EngineConfig_RunSide_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_graph_5fconfig_2eproto__INCLUDED
